{"version":3,"file":"static/js/454.86e5b116.chunk.js","mappings":"8QAEaA,EAAUC,EAAAA,GAAAA,IAAH,8VAiBPC,EAAOD,EAAAA,GAAAA,GAAH,sIAOJE,EAAOF,EAAAA,GAAAA,GAAH,8T,kBC4BjB,EA/Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAeP,GAFpB,OAERG,EAFQ,OAGdC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACN,KAGF,+BAEI,SAACJ,EAAD,WACE,SAACE,EAAD,UACGK,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,UAACf,EAAD,YACE,gBACEgB,IAAG,UACDH,ECjCW,mCDkCWA,EADV,UAELI,IAETC,IAAKJ,KAEP,0BACE,0BAAM,YAAc,IAAEA,MAExB,0BACE,0BAAM,eAAiB,IAAEC,OAblBH,EADH,SAuBrB,C,+LEhDDO,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QANY,mCAOZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,sBAAiCC,GADvB,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAM1B,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,KAAgCmB,GADxB,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,8BAAiCU,GAAaT,GAD3C,cACpBI,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZlB,EAAc,mCAAG,WAAMP,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aAAuCmB,GADlC,cACtBI,EADsB,yBAErBA,EAASC,KAAKrB,MAFO,2CAAH,sDAKd0B,EAAiB,mCAAG,WAAM7B,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aAAuCmB,GAD/B,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/constants.js","services/SearchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  height: 500px;\n  overflow-y: scroll;\n  transition: all 0.2s ease-in-out;\n  padding: 10px;\n  overflow: overlay;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 20px;\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  min-width: 182px;\n  font-size: 14px;\n  padding: 6px;\n  max-width: min-content;\n  background-color: #de8e46;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n    border-radius: 8px;\n  }\n  span {\n    color: #34495e;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/SearchApi';\nimport { BASE_POSTER_URL } from 'services/constants';\nimport { Wrapper, Item, List } from './Cast.styled';\nimport placeholder from '../images/placeholder.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <Wrapper>\n          <List>\n            {cast.map(({ id, profile_path, original_name, character }) => (\n              <Item key={id}>\n                <img\n                  src={`${\n                    profile_path\n                      ? BASE_POSTER_URL + profile_path\n                      : `${placeholder}`\n                  }`}\n                  alt={original_name}\n                />\n                <p>\n                  <span> Actor:</span> {original_name}\n                </p>\n                <p>\n                  <span>Character:</span> {character}\n                </p>\n              </Item>\n            ))}\n          </List>\n        </Wrapper>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// import { fetchMovieCredits } from 'services/SearchApi';\n// import { List, Item } from './Cast.styled';\n// import placeholder from '../images/placeholder.png';\n\n// const Cast = () => {\n//   const { movieId } = useParams();\n//   const [cast, setCast] = useState([]);\n\n//   useEffect(() => {\n//     // Отримання інформації про акторський склад фільму з API\n\n//     const movieCast = async () => {\n//       try {\n//         const response = await fetchMovieCredits(movieId);\n//         setCast(response);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     movieCast();\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {cast.length !== 0 && (\n//         <div>\n//           <h2>Movie Cast</h2>\n//           <List>\n//             {cast.map(actor => (\n//               <Item key={actor.id}>\n//                 <img\n//                   width=\"200px\"\n//                   height=\"300px\"\n//                   src={\n//                     actor.profile_path\n//                       ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n//                       : `${placeholder}`\n//                   }\n//                   alt={actor.original_name}\n//                 />\n//                 <p>{actor.name}</p>\n//               </Item>\n//             ))}\n//           </List>\n//         </div>\n//       )}\n//       {cast.length === 0 && <div>We don't have any cast for this movie.</div>}\n//     </>\n//   );\n// };\n\n// export default Cast;\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n","import axios from 'axios';\n\nconst API_KEY = 'd3f1e252515ffd863daf881642a1c381';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["Wrapper","styled","List","Item","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","fetchMovieCast","console","log","map","id","profile_path","original_name","character","src","placeholder","alt","axios","params","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieReviews"],"sourceRoot":""}